# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ImageStoreInfo(Model):
    """Information about the ImageStore's resource usage.

    :param disk_info: disk capacity and available disk space on the node where
     the ImageStore primary is placed.
    :type disk_info: ~azure.servicefabric.models.DiskInfo
    :param used_by_metadata: the ImageStore's file system usage for metadata.
    :type used_by_metadata: ~azure.servicefabric.models.UsageInfo
    :param used_by_staging: The ImageStore's file system usage for staging
     files that are being uploaded.
    :type used_by_staging: ~azure.servicefabric.models.UsageInfo
    :param used_by_copy: the ImageStore's file system usage for copied
     application and cluster packages. [Removing application and cluster
     packages](https://docs.microsoft.com/rest/api/servicefabric/sfclient-api-deleteimagestorecontent)
     will free up this space.
    :type used_by_copy: ~azure.servicefabric.models.UsageInfo
    :param used_by_register: the ImageStore's file system usage for registered
     and cluster packages. [Unregistering
     application](https://docs.microsoft.com/rest/api/servicefabric/sfclient-api-unprovisionapplicationtype)
     and [cluster
     packages](https://docs.microsoft.com/rest/api/servicefabric/sfclient-api-unprovisionapplicationtype)
     will free up this space.
    :type used_by_register: ~azure.servicefabric.models.UsageInfo
    """

    _attribute_map = {
        'disk_info': {'key': 'DiskInfo', 'type': 'DiskInfo'},
        'used_by_metadata': {'key': 'UsedByMetadata', 'type': 'UsageInfo'},
        'used_by_staging': {'key': 'UsedByStaging', 'type': 'UsageInfo'},
        'used_by_copy': {'key': 'UsedByCopy', 'type': 'UsageInfo'},
        'used_by_register': {'key': 'UsedByRegister', 'type': 'UsageInfo'},
    }

    def __init__(self, **kwargs):
        super(ImageStoreInfo, self).__init__(**kwargs)
        self.disk_info = kwargs.get('disk_info', None)
        self.used_by_metadata = kwargs.get('used_by_metadata', None)
        self.used_by_staging = kwargs.get('used_by_staging', None)
        self.used_by_copy = kwargs.get('used_by_copy', None)
        self.used_by_register = kwargs.get('used_by_register', None)
