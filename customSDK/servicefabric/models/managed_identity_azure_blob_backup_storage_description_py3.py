# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .backup_storage_description_py3 import BackupStorageDescription


class ManagedIdentityAzureBlobBackupStorageDescription(BackupStorageDescription):
    """Describes the parameters for Azure blob store (connected using managed
    identity) used for storing and enumerating backups.

    All required parameters must be populated in order to send to Azure.

    :param friendly_name: Friendly name for this backup storage.
    :type friendly_name: str
    :param storage_kind: Required. Constant filled by server.
    :type storage_kind: str
    :param managed_identity_type: Required. The type of managed identity to be
     used to connect to Azure Blob Store via Managed Identity. Possible values
     include: 'Invalid', 'VMSS', 'Cluster'
    :type managed_identity_type: str or
     ~azure.servicefabric.models.ManagedIdentityType
    :param blob_service_uri: Required. The Blob Service Uri to connect to the
     Azure blob store..
    :type blob_service_uri: str
    :param container_name: Required. The name of the container in the blob
     store to store and enumerate backups from.
    :type container_name: str
    """

    _validation = {
        'storage_kind': {'required': True},
        'managed_identity_type': {'required': True},
        'blob_service_uri': {'required': True},
        'container_name': {'required': True},
    }

    _attribute_map = {
        'friendly_name': {'key': 'FriendlyName', 'type': 'str'},
        'storage_kind': {'key': 'StorageKind', 'type': 'str'},
        'managed_identity_type': {'key': 'ManagedIdentityType', 'type': 'str'},
        'blob_service_uri': {'key': 'BlobServiceUri', 'type': 'str'},
        'container_name': {'key': 'ContainerName', 'type': 'str'},
    }

    def __init__(self, *, managed_identity_type, blob_service_uri: str, container_name: str, friendly_name: str=None, **kwargs) -> None:
        super(ManagedIdentityAzureBlobBackupStorageDescription, self).__init__(friendly_name=friendly_name, **kwargs)
        self.managed_identity_type = managed_identity_type
        self.blob_service_uri = blob_service_uri
        self.container_name = container_name
        self.storage_kind = 'ManagedIdentityAzureBlobStore'
