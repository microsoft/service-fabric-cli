# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PartitionMetricLoadDescription(Model):
    """Represents load information for a partition, which contains the metrics
    load information about primary, all secondary replicas/instances or a
    specific secondary replica/instance located on a specific node.

    :param partition_id: Id of the partition.
    :type partition_id: str
    :param primary_replica_load_entries: Partition's load information for
     primary replica, in case partition is from a stateful service.
    :type primary_replica_load_entries:
     list[~azure.servicefabric.models.MetricLoadDescription]
    :param secondary_replicas_or_instances_load_entries: Partition's load
     information for all secondary replicas or instances.
    :type secondary_replicas_or_instances_load_entries:
     list[~azure.servicefabric.models.MetricLoadDescription]
    :param secondary_replica_or_instance_load_entries_per_node: Partition's
     load information for a specific secondary replica or instance located on a
     specific node.
    :type secondary_replica_or_instance_load_entries_per_node:
     list[~azure.servicefabric.models.ReplicaMetricLoadDescription]
    """

    _attribute_map = {
        'partition_id': {'key': 'PartitionId', 'type': 'str'},
        'primary_replica_load_entries': {'key': 'PrimaryReplicaLoadEntries', 'type': '[MetricLoadDescription]'},
        'secondary_replicas_or_instances_load_entries': {'key': 'SecondaryReplicasOrInstancesLoadEntries', 'type': '[MetricLoadDescription]'},
        'secondary_replica_or_instance_load_entries_per_node': {'key': 'SecondaryReplicaOrInstanceLoadEntriesPerNode', 'type': '[ReplicaMetricLoadDescription]'},
    }

    def __init__(self, *, partition_id: str=None, primary_replica_load_entries=None, secondary_replicas_or_instances_load_entries=None, secondary_replica_or_instance_load_entries_per_node=None, **kwargs) -> None:
        super(PartitionMetricLoadDescription, self).__init__(**kwargs)
        self.partition_id = partition_id
        self.primary_replica_load_entries = primary_replica_load_entries
        self.secondary_replicas_or_instances_load_entries = secondary_replicas_or_instances_load_entries
        self.secondary_replica_or_instance_load_entries_per_node = secondary_replica_or_instance_load_entries_per_node
